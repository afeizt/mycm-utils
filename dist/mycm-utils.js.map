{"version":3,"file":"mycm-utils.js","sources":["../src/index.js","../src/lib/dateFormat.js","../src/lib/cutStr.js","../src/lib/htmlToText.js","../src/lib/cutHtml.js"],"sourcesContent":["/*\r\n * @Author: mycm\r\n * @Date: 2021-01-13 20:09:52\r\n * @LastEditors: mycm\r\n * @LastEditTime: 2021-02-09 20:12:10\r\n * @Description: 常用函数集合\r\n */\r\n\r\nimport dateFormat from './lib/dateFormat'\r\nimport cutStr from './lib/cutStr'\r\nimport htmlToText from './lib/htmlToText'\r\nimport cutHtml from './lib/cutHtml'\r\n// debugger;\r\nexport default {\r\n\tdateFormat, cutStr, htmlToText, cutHtml\r\n}\r\n\r\n","/**\r\n * @description: 时间戳转日期字符串\r\n * @Author: mycm\r\n * @param {string} timestamp时间戳字符串\r\n * @param {string} format日期格式eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n * @return {string}\r\n */\r\nexport default function dateFormat(timestamp, format) {\r\n\t/*\r\n   * eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n\r\n   */\r\n\tlet time = new Date(timestamp);\r\n\tvar o = {\r\n\t\t\"M+\": time.getMonth() + 1, // month\r\n\t\t\"d+\": time.getDate(), // day\r\n\t\t\"h+\": time.getHours(), // hour\r\n\t\t\"m+\": time.getMinutes(), // minute\r\n\t\t\"s+\": time.getSeconds(), // second\r\n\t\t\"q+\": Math.floor((time.getMonth() + 3) / 3), // quarter\r\n\t\t\"S\": time.getMilliseconds()\r\n\t\t// millisecond\r\n\t}\r\n\tif (/(y+)/.test(format)) {\r\n\t\tformat = format.replace(RegExp.$1, (time.getFullYear() + \"\")\r\n\t\t\t.substr(4 - RegExp.$1.length));\r\n\t}\r\n\r\n\tfor (var k in o) {\r\n\t\tif (new RegExp(\"(\" + k + \")\").test(format)) {\r\n\t\t\tformat = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k]\r\n\t\t\t\t: (\"00\" + o[k]).substr((\"\" + o[k]).length));\r\n\t\t}\r\n\t}\r\n\treturn format;\r\n}","/**\r\n * @description: 截取字符串长度函数,支持中文\r\n * @Author: mycm\r\n * @param {string} str\r\n * @param {int} num要截取下来的长度\r\n * @param {*} suffix后缀\r\n * @return {string}\r\n */\r\nexport default function cutStr(str, num, suffix = '...') {\r\n\tif (str.replace(/[\\u4e00-\\u9fa5]/g, '**').length <= num) {\r\n\t\treturn str;\r\n\t}\r\n\tlet len = 0;\r\n\tlet tmpStr = '';\r\n\tfor (let i = 0; i < str.length; i++) { // 遍历字符串\r\n\t\tif (/[\\u4e00-\\u9fa5]/.test(str[i])) { // 中文 长度为两字节\r\n\t\t\tlen += 2;\r\n\t\t} else {\r\n\t\t\tlen += 1;\r\n\t\t}\r\n\t\tif (len > num) {\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\ttmpStr += str[i];\r\n\t\t}\r\n\t}\r\n\treturn tmpStr + suffix;\r\n}","/**\r\n * @description: 过滤html文本,返回纯text内容\r\n * @Author: mycm\r\n * @param {string} oHtml html文本段\r\n * @param {boolean} wrap是否保留换行\r\n * @return {string}\r\n */\r\nexport default function htmlToText(oHtml, wrap = false) {\r\n\r\n\tif (typeof oHtml === \"string\") {\r\n\t\tlet str = oHtml\r\n\t\t// .replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n\t\t// .replace(/<[^<^>]*>/g, \"\");\r\n\t\tdebugger;\r\n\t\tif (wrap === false) str.replace(/[\\r\\n]/g, \"\");\r\n\t\telse {\r\n\t\t\tconsole.log(/\\r\\n/.test(str));\r\n\t\t\tstr.replace(/\\r\\n/, \"444\");\r\n\t\t\tconsole.log(str)\r\n\t\t}\r\n\t\treturn str;\r\n\r\n\t} else {\r\n\t\treturn \"\";\r\n\t}\r\n};","/**\r\n* @description: 截取带HTML样式的字符串，并保留并自动补齐HTML标签\r\n* @Author: mycm\r\n* @param {string} oHtml html文本段\r\n* @param {string} length 截取后的长度，包含标签之间的空格\r\n* @param {boolean} isByte 是否按照字节长度截取\r\n* @return {string} html片段\r\n*/\r\nconst cutHtml = function (oHtml, length, isByte) {\r\n\tvar rgx1 = /<[^<^>^\\/]+>/; //前标签(的href属性中可能会有“//”符号，先移除再判断)\r\n\tvar rgx2 = /<\\/[^<^>^\\/]+>/; //后标签\r\n\tvar rgx3 = /<[^<^>^\\/]+\\/>/; //自标签\r\n\tvar rgx4 = /<[^<^>]+>/; //所有标签\r\n\tvar selfTags = \"hr,br,img,input,meta\".split(\",\");\r\n\tif (typeof oHtml !== \"string\") {\r\n\t\treturn \"\";\r\n\t}\r\n\toHtml = oHtml.replace(/(^\\s*)|(\\s*$)/g, \"\").replace(/[\\r\\n]/g, \"\");\r\n\tvar oStr = oHtml.replace(/<[^<^>]*>/g, \"\");\r\n\tvar olen = isByte\r\n\t\t? oStr.replace(/[^\\x00-\\xff]/g, \"**\").length\r\n\t\t: oStr.length;\r\n\tif (!/^\\d+$/.test(length) || olen <= length) {\r\n\t\treturn oHtml;\r\n\t}\r\n\tvar tStr = oHtml;\r\n\tvar index = 0;\r\n\tvar matchs = new Array();\r\n\twhile (rgx4.test(tStr)) {\r\n\t\tvar m = new Object();\r\n\t\tm.index = index + tStr.search(rgx4);\r\n\t\tm.string = tStr.match(rgx4).toString();\r\n\t\tvar len = tStr.search(/<[^<^>]+>/) + tStr.match(/<[^<^>]+>/)[0].length;\r\n\t\ttStr = tStr.substr(len);\r\n\t\tindex += len;\r\n\t\tmatchs.push(m);\r\n\t}\r\n\tif (isByte) {\r\n\t\tvar i = 0;\r\n\t\tfor (var z = 0; z < oStr.length; z++) {\r\n\t\t\ti += oStr.charCodeAt(z) > 255 ? 2 : 1;\r\n\t\t\tif (i >= length) {\r\n\t\t\t\ttStr = oStr.slice(0, z + 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\ttStr = oStr.substr(0, length);\r\n\t}\r\n\tvar startTags = new Array();\r\n\tfor (var i = 0; i < matchs.length; i++) {\r\n\t\tif (tStr.length <= matchs[i].index) {\r\n\t\t\t//tStr += matchs[i].string;\r\n\t\t\tmatchs = matchs.slice(0, i);\r\n\t\t\tbreak;\r\n\t\t} else {\r\n\t\t\ttStr =\r\n\t\t\t\ttStr.substring(0, matchs[i].index) +\r\n\t\t\t\tmatchs[i].string +\r\n\t\t\t\ttStr.substr(matchs[i].index);\r\n\t\t\tif (rgx1.test(matchs[i].string.replace(/(\\/\\/)/g, \"\"))) {\r\n\t\t\t\tvar name = matchs[i].string.replace(/[<>]/g, \"\").split(\" \");\r\n\t\t\t\tif (name.length > 0) {\r\n\t\t\t\t\tname = name[0];\r\n\t\t\t\t\tif (!selfTags.includes(name)) {\r\n\t\t\t\t\t\tstartTags.push(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (rgx2.test(matchs[i].string)) {\r\n\t\t\t\tvar name = matchs[i].string.replace(/[<\\/>]/g, \"\");\r\n\t\t\t\tif (\r\n\t\t\t\t\tstartTags.length > 0 &&\r\n\t\t\t\t\tstartTags[startTags.length - 1] === name\r\n\t\t\t\t) {\r\n\t\t\t\t\tstartTags.pop();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (startTags.length > 0) {\r\n\t\tfor (var i = startTags.length - 1; i >= 0; i--) {\r\n\t\t\ttStr += \"\";\r\n\t\t}\r\n\t}\r\n\treturn tStr;\r\n};\r\nexport default cutHtml;\r\n// module.exports = cutHtml;\r\n"],"names":["dateFormat","timestamp","format","k","o","time","Date","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","cutStr","str","num","suffix","len","tmpStr","i","htmlToText","oHtml","console","log","cutHtml","isByte","rgx1","rgx2","rgx4","selfTags","split","oStr","olen","tStr","index","matchs","Array","m","Object","search","string","match","toString","push","z","charCodeAt","slice","name","startTags","substring","includes","pop"],"mappings":"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"}