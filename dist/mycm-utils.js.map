{"version":3,"file":"mycm-utils.js","sources":["../src/lib/cutHtml.js","../src/lib/cutStr.js","../src/lib/dateFormat.js","../src/lib/htmlToText.js"],"sourcesContent":["/**\r\n * @description: 截取带HTML样式的字符串，并保留并自动补齐HTML标签\r\n * @Author: mycm\r\n * @param {string} oHtml html文本段\r\n * @param {string} length 截取后的长度，包含标签之间的空格\r\n * @param {boolean} isByte 是否按照字节长度截取\r\n * @return {string} html片段\r\n */\r\nconst cutHtml = function(oHtml, length, isByte, suffix) {\r\n    var rgx1 = /<[^<^>^\\/]+>/; //前标签(的href属性中可能会有“//”符号，先移除再判断)\r\n    var rgx2 = /<\\/[^<^>^\\/]+>/; //后标签\r\n    var rgx3 = /<[^<^>^\\/]+\\/>/; //自标签\r\n    var rgx4 = /<[^<^>]+>/; //所有标签\r\n    var selfTags = \"hr,br,img,input,meta\".split(\",\");\r\n    if (typeof oHtml !== \"string\") {\r\n        return \"\";\r\n    }\r\n    oHtml = oHtml.replace(/(^\\s*)|(\\s*$)/g, \"\").replace(/[\\r\\n]/g, \"\");\r\n    var oStr = oHtml.replace(/<[^<^>]*>/g, \"\");\r\n    var olen = isByte ?\r\n        oStr.replace(/[^\\x00-\\xff]/g, \"**\").length :\r\n        oStr.length;\r\n    if (!/^\\d+$/.test(length) || olen <= length) {\r\n        return oHtml;\r\n    }\r\n    var tStr = oHtml;\r\n    var index = 0;\r\n    var matchs = new Array();\r\n    while (rgx4.test(tStr)) {\r\n        var m = new Object();\r\n        m.index = index + tStr.search(rgx4);\r\n        m.string = tStr.match(rgx4).toString();\r\n        var len = tStr.search(/<[^<^>]+>/) + tStr.match(/<[^<^>]+>/)[0].length;\r\n        tStr = tStr.substr(len);\r\n        index += len;\r\n        matchs.push(m);\r\n    }\r\n    if (isByte) {\r\n        var i = 0;\r\n        for (var z = 0; z < oStr.length; z++) {\r\n            i += oStr.charCodeAt(z) > 255 ? 2 : 1;\r\n            if (i >= length) {\r\n                tStr = oStr.slice(0, z + 1);\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        tStr = oStr.substr(0, length);\r\n    }\r\n    var startTags = new Array();\r\n    for (var i = 0; i < matchs.length; i++) {\r\n        if (tStr.length <= matchs[i].index) {\r\n            //tStr += matchs[i].string;\r\n            matchs = matchs.slice(0, i);\r\n            break;\r\n        } else {\r\n            tStr =\r\n                tStr.substring(0, matchs[i].index) +\r\n                matchs[i].string +\r\n                tStr.substr(matchs[i].index);\r\n            if (rgx1.test(matchs[i].string.replace(/(\\/\\/)/g, \"\"))) {\r\n                var name = matchs[i].string.replace(/[<>]/g, \"\").split(\" \");\r\n                if (name.length > 0) {\r\n                    name = name[0];\r\n                    if (!selfTags.includes(name)) {\r\n                        startTags.push(name);\r\n                    }\r\n                }\r\n            } else if (rgx2.test(matchs[i].string)) {\r\n                var name = matchs[i].string.replace(/[<\\/>]/g, \"\");\r\n                if (\r\n                    startTags.length > 0 &&\r\n                    startTags[startTags.length - 1] === name\r\n                ) {\r\n                    startTags.pop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (startTags.length > 0) {\r\n        for (var i = startTags.length - 1; i >= 0; i--) {\r\n            tStr += \"\";\r\n        }\r\n    }\r\n    return tStr + (suffix || '');\r\n};\r\nexport default cutHtml;\r\n// module.exports = cutHtml;","/**\r\n * @description: 截取字符串长度函数,支持中文\r\n * @Author: mycm\r\n * @param {string} str\r\n * @param {int} num要截取下来的长度\r\n * @param {*} suffix后缀\r\n * @return {string}\r\n */\r\nexport default function cutStr(str, num, suffix) {\r\n    if (str.replace(/[\\u4e00-\\u9fa5]/g, '**').length <= num) {\r\n        return str;\r\n    }\r\n    let len = 0;\r\n    let tmpStr = '';\r\n    for (let i = 0; i < str.length; i++) { // 遍历字符串\r\n        if (/[\\u4e00-\\u9fa5]/.test(str[i])) { // 中文 长度为两字节\r\n            len += 2;\r\n        } else {\r\n            len += 1;\r\n        }\r\n        if (len > num) {\r\n            break;\r\n        } else {\r\n            tmpStr += str[i];\r\n        }\r\n    }\r\n    return tmpStr + (suffix || '');\r\n}","/**\r\n * @description: 时间戳转日期字符串\r\n * @Author: mycm\r\n * @param {string} timestamp时间戳字符串\r\n * @param {string} format日期格式eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n * @return {string}\r\n */\r\nexport default function dateFormat(timestamp, format) {\r\n\t/*\r\n   * eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n\r\n   */\r\n\tlet time = new Date(timestamp);\r\n\tvar o = {\r\n\t\t\"M+\": time.getMonth() + 1, // month\r\n\t\t\"d+\": time.getDate(), // day\r\n\t\t\"h+\": time.getHours(), // hour\r\n\t\t\"m+\": time.getMinutes(), // minute\r\n\t\t\"s+\": time.getSeconds(), // second\r\n\t\t\"q+\": Math.floor((time.getMonth() + 3) / 3), // quarter\r\n\t\t\"S\": time.getMilliseconds()\r\n\t\t// millisecond\r\n\t}\r\n\tif (/(y+)/.test(format)) {\r\n\t\tformat = format.replace(RegExp.$1, (time.getFullYear() + \"\")\r\n\t\t\t.substr(4 - RegExp.$1.length));\r\n\t}\r\n\r\n\tfor (var k in o) {\r\n\t\tif (new RegExp(\"(\" + k + \")\").test(format)) {\r\n\t\t\tformat = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k]\r\n\t\t\t\t: (\"00\" + o[k]).substr((\"\" + o[k]).length));\r\n\t\t}\r\n\t}\r\n\treturn format;\r\n}","/**\r\n * @description: 过滤html文本,返回纯text内容\r\n * @Author: mycm\r\n * @param {string} oHtml html文本段\r\n * @param {boolean} wrap是否保留换行\r\n * @return {string}\r\n */\r\nexport default function htmlToText(oHtml, wrap = false) {\r\n\r\n    if (typeof oHtml === \"string\") {\r\n        let str = oHtml\r\n            // .replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n            // .replace(/<[^<^>]*>/g, \"\");\r\n\r\n        if (wrap === false) str.replace(/[\\r\\n]/g, \"\");\r\n        else {\r\n            // console.log(/\\r\\n/.test(str));\r\n            str.replace(/\\r\\n/, \"444\");\r\n            // console.log(str)\r\n        }\r\n        return str;\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n};"],"names":["oHtml","length","isByte","suffix","rgx1","rgx2","rgx4","selfTags","split","oStr","replace","olen","test","tStr","index","matchs","Array","m","Object","search","string","match","toString","len","substr","push","i","z","charCodeAt","slice","name","startTags","substring","includes","pop","str","num","tmpStr","timestamp","format","k","o","time","Date","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","RegExp","$1","getFullYear"],"mappings":"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"}