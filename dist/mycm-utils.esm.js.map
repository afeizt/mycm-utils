{"version":3,"file":"mycm-utils.esm.js","sources":["../src/lib/dateFormat.js","../src/lib/cutStr.js","../src/lib/htmlToText.js","../src/lib/cutHtml.js"],"sourcesContent":["/**\r\n * @description: 时间戳转日期字符串\r\n * @Author: mycm\r\n * @param {string} timestamp时间戳字符串\r\n * @param {string} format日期格式eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n * @return {string}\r\n */\r\nexport default function dateFormat(timestamp, format) {\r\n\t/*\r\n   * eg:format=\"YYYY-MM-dd hh:mm:ss\";\r\n\r\n   */\r\n\tlet time = new Date(timestamp);\r\n\tvar o = {\r\n\t\t\"M+\": time.getMonth() + 1, // month\r\n\t\t\"d+\": time.getDate(), // day\r\n\t\t\"h+\": time.getHours(), // hour\r\n\t\t\"m+\": time.getMinutes(), // minute\r\n\t\t\"s+\": time.getSeconds(), // second\r\n\t\t\"q+\": Math.floor((time.getMonth() + 3) / 3), // quarter\r\n\t\t\"S\": time.getMilliseconds()\r\n\t\t// millisecond\r\n\t}\r\n\tif (/(y+)/.test(format)) {\r\n\t\tformat = format.replace(RegExp.$1, (time.getFullYear() + \"\")\r\n\t\t\t.substr(4 - RegExp.$1.length));\r\n\t}\r\n\r\n\tfor (var k in o) {\r\n\t\tif (new RegExp(\"(\" + k + \")\").test(format)) {\r\n\t\t\tformat = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k]\r\n\t\t\t\t: (\"00\" + o[k]).substr((\"\" + o[k]).length));\r\n\t\t}\r\n\t}\r\n\treturn format;\r\n}","/**\r\n * @description: 截取字符串长度函数,支持中文\r\n * @Author: mycm\r\n * @param {string} str\r\n * @param {int} num要截取下来的长度\r\n * @param {*} suffix后缀\r\n * @return {string}\r\n */\r\nexport default function cutStr(str, num, suffix) {\r\n    if (str.replace(/[\\u4e00-\\u9fa5]/g, '**').length <= num) {\r\n        return str;\r\n    }\r\n    let len = 0;\r\n    let tmpStr = '';\r\n    for (let i = 0; i < str.length; i++) { // 遍历字符串\r\n        if (/[\\u4e00-\\u9fa5]/.test(str[i])) { // 中文 长度为两字节\r\n            len += 2;\r\n        } else {\r\n            len += 1;\r\n        }\r\n        if (len > num) {\r\n            break;\r\n        } else {\r\n            tmpStr += str[i];\r\n        }\r\n    }\r\n    return tmpStr + (suffix || '');\r\n}","/**\r\n * @description: 过滤html文本,返回纯text内容\r\n * @Author: mycm\r\n * @param {string} oHtml html文本段\r\n * @param {boolean} wrap是否保留换行\r\n * @return {string}\r\n */\r\nexport default function htmlToText(oHtml, wrap = false) {\r\n\r\n    if (typeof oHtml === \"string\") {\r\n        let str = oHtml\r\n            // .replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n            // .replace(/<[^<^>]*>/g, \"\");\r\n\r\n        if (wrap === false) str.replace(/[\\r\\n]/g, \"\");\r\n        else {\r\n            // console.log(/\\r\\n/.test(str));\r\n            str.replace(/\\r\\n/, \"444\");\r\n            // console.log(str)\r\n        }\r\n        return str;\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n};","/**\r\n * @description: 截取带HTML样式的字符串，并保留并自动补齐HTML标签\r\n * @Author: mycm\r\n * @param {string} oHtml html文本段\r\n * @param {string} length 截取后的长度，包含标签之间的空格\r\n * @param {boolean} isByte 是否按照字节长度截取\r\n * @return {string} html片段\r\n */\r\nconst cutHtml = function(oHtml, length, isByte, suffix) {\r\n    var rgx1 = /<[^<^>^\\/]+>/; //前标签(的href属性中可能会有“//”符号，先移除再判断)\r\n    var rgx2 = /<\\/[^<^>^\\/]+>/; //后标签\r\n    var rgx3 = /<[^<^>^\\/]+\\/>/; //自标签\r\n    var rgx4 = /<[^<^>]+>/; //所有标签\r\n    var selfTags = \"hr,br,img,input,meta\".split(\",\");\r\n    if (typeof oHtml !== \"string\") {\r\n        return \"\";\r\n    }\r\n    oHtml = oHtml.replace(/(^\\s*)|(\\s*$)/g, \"\").replace(/[\\r\\n]/g, \"\");\r\n    var oStr = oHtml.replace(/<[^<^>]*>/g, \"\");\r\n    var olen = isByte ?\r\n        oStr.replace(/[^\\x00-\\xff]/g, \"**\").length :\r\n        oStr.length;\r\n    if (!/^\\d+$/.test(length) || olen <= length) {\r\n        return oHtml;\r\n    }\r\n    var tStr = oHtml;\r\n    var index = 0;\r\n    var matchs = new Array();\r\n    while (rgx4.test(tStr)) {\r\n        var m = new Object();\r\n        m.index = index + tStr.search(rgx4);\r\n        m.string = tStr.match(rgx4).toString();\r\n        var len = tStr.search(/<[^<^>]+>/) + tStr.match(/<[^<^>]+>/)[0].length;\r\n        tStr = tStr.substr(len);\r\n        index += len;\r\n        matchs.push(m);\r\n    }\r\n    if (isByte) {\r\n        var i = 0;\r\n        for (var z = 0; z < oStr.length; z++) {\r\n            i += oStr.charCodeAt(z) > 255 ? 2 : 1;\r\n            if (i >= length) {\r\n                tStr = oStr.slice(0, z + 1);\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        tStr = oStr.substr(0, length);\r\n    }\r\n    var startTags = new Array();\r\n    for (var i = 0; i < matchs.length; i++) {\r\n        if (tStr.length <= matchs[i].index) {\r\n            //tStr += matchs[i].string;\r\n            matchs = matchs.slice(0, i);\r\n            break;\r\n        } else {\r\n            tStr =\r\n                tStr.substring(0, matchs[i].index) +\r\n                matchs[i].string +\r\n                tStr.substr(matchs[i].index);\r\n            if (rgx1.test(matchs[i].string.replace(/(\\/\\/)/g, \"\"))) {\r\n                var name = matchs[i].string.replace(/[<>]/g, \"\").split(\" \");\r\n                if (name.length > 0) {\r\n                    name = name[0];\r\n                    if (!selfTags.includes(name)) {\r\n                        startTags.push(name);\r\n                    }\r\n                }\r\n            } else if (rgx2.test(matchs[i].string)) {\r\n                var name = matchs[i].string.replace(/[<\\/>]/g, \"\");\r\n                if (\r\n                    startTags.length > 0 &&\r\n                    startTags[startTags.length - 1] === name\r\n                ) {\r\n                    startTags.pop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (startTags.length > 0) {\r\n        for (var i = startTags.length - 1; i >= 0; i--) {\r\n            tStr += \"\";\r\n        }\r\n    }\r\n    return tStr + (suffix || '');\r\n};\r\nexport default cutHtml;\r\n// module.exports = cutHtml;"],"names":["dateFormat","timestamp","format","time","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","cutStr","str","num","suffix","len","tmpStr","i","htmlToText","oHtml","wrap","cutHtml","isByte","rgx1","rgx2","rgx4","selfTags","split","oStr","olen","tStr","index","matchs","Array","m","Object","search","string","match","toString","push","z","charCodeAt","slice","startTags","substring","name","includes","pop"],"mappings":"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"}